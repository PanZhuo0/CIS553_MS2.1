!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AuditPings	ls-routing-protocol.cc	/^void LSRoutingProtocol::AuditPings()$/;"	f	class:LSRoutingProtocol
BroadcastPacket	ls-routing-protocol.cc	/^void LSRoutingProtocol::BroadcastPacket(Ptr<Packet> packet)$/;"	f	class:LSRoutingProtocol
Copy	ls-routing-helper.cc	/^LSRoutingHelper::Copy (void) const$/;"	f	class:LSRoutingHelper
Create	ls-routing-helper.cc	/^LSRoutingHelper::Create (Ptr<Node> node) const$/;"	f	class:LSRoutingHelper
Deserialize	ls-message.cc	/^LSMessage::Deserialize (Buffer::Iterator start)$/;"	f	class:LSMessage
Deserialize	ls-message.cc	/^LSMessage::PingReq::Deserialize (Buffer::Iterator &start)$/;"	f	class:LSMessage::PingReq
Deserialize	ls-message.cc	/^LSMessage::PingRsp::Deserialize (Buffer::Iterator &start)$/;"	f	class:LSMessage::PingRsp
Deserialize	ls-message.cc	/^uint32_t LSMessage::LSAInfo::Deserialize(Buffer::Iterator& start){$/;"	f	class:LSMessage::LSAInfo
DoDispose	ls-routing-protocol.cc	/^void LSRoutingProtocol::DoDispose()$/;"	f	class:LSRoutingProtocol
DoInitialize	ls-routing-protocol.cc	/^void LSRoutingProtocol::DoInitialize()$/;"	f	class:LSRoutingProtocol
DumpLSA	ls-routing-protocol.cc	/^void LSRoutingProtocol::DumpLSA()$/;"	f	class:LSRoutingProtocol
DumpNeighbors	ls-routing-protocol.cc	/^void LSRoutingProtocol::DumpNeighbors()$/;"	f	class:LSRoutingProtocol
DumpRoutingTable	ls-routing-protocol.cc	/^void LSRoutingProtocol::DumpRoutingTable() {$/;"	f	class:LSRoutingProtocol
FloodLSA	ls-routing-protocol.cc	/^void LSRoutingProtocol::FloodLSA(const LSMessage& lsaMessage){$/;"	f	class:LSRoutingProtocol
GetHR	ls-message.cc	/^LSMessage::HRInfo LSMessage::GetHR() const{$/;"	f	class:LSMessage
GetInstanceTypeId	ls-message.cc	/^LSMessage::GetInstanceTypeId (void) const$/;"	f	class:LSMessage
GetLSA	ls-message.cc	/^LSMessage::LSAInfo LSMessage::GetLSA() const{$/;"	f	class:LSMessage
GetMessageType	ls-message.cc	/^LSMessage::GetMessageType () const$/;"	f	class:LSMessage
GetNextSequenceNumber	ls-routing-protocol.cc	/^LSRoutingProtocol::GetNextSequenceNumber()$/;"	f	class:LSRoutingProtocol
GetOriginatorAddress	ls-message.cc	/^LSMessage::GetOriginatorAddress (void) const$/;"	f	class:LSMessage
GetPingReq	ls-message.cc	/^LSMessage::PingReq LSMessage::GetPingReq ()$/;"	f	class:LSMessage
GetPingRsp	ls-message.cc	/^LSMessage::GetPingRsp ()$/;"	f	class:LSMessage
GetSequenceNumber	ls-message.cc	/^LSMessage::GetSequenceNumber (void) const$/;"	f	class:LSMessage
GetSerializedSize	ls-message.cc	/^LSMessage::GetSerializedSize (void) const$/;"	f	class:LSMessage
GetSerializedSize	ls-message.cc	/^LSMessage::PingReq::GetSerializedSize (void) const$/;"	f	class:LSMessage::PingReq
GetSerializedSize	ls-message.cc	/^LSMessage::PingRsp::GetSerializedSize (void) const$/;"	f	class:LSMessage::PingRsp
GetSerializedSize	ls-message.cc	/^uint32_t LSMessage::HRInfo::GetSerializedSize(void) const{$/;"	f	class:LSMessage::HRInfo
GetSerializedSize	ls-message.cc	/^uint32_t LSMessage::LSAInfo::GetSerializedSize(void) const{$/;"	f	class:LSMessage::LSAInfo
GetTTL	ls-message.cc	/^LSMessage::GetTTL (void) const$/;"	f	class:LSMessage
GetTypeId	ls-message.cc	/^LSMessage::GetTypeId (void)$/;"	f	class:LSMessage
GetTypeId	ls-routing-protocol.cc	/^LSRoutingProtocol::GetTypeId(void)$/;"	f	class:LSRoutingProtocol
HR	ls-message.h	/^	      HR,$/;"	e	enum:LSMessage::MessageType
HRInfo	ls-message.h	/^    struct HRInfo{$/;"	s	class:LSMessage
IPV4_ADDRESS_SIZE	ls-message.h	28;"	d
IsOwnAddress	ls-routing-protocol.cc	/^bool LSRoutingProtocol::IsOwnAddress(Ipv4Address originatorAddress)$/;"	f	class:LSRoutingProtocol
LSA	ls-message.h	/^	      LSA   \/\/ LSA MSG TYPE used to implement LS algorihm$/;"	e	enum:LSMessage::MessageType
LSAInfo	ls-message.h	/^    struct LSAInfo{$/;"	s	class:LSMessage
LSMessage	ls-message.cc	/^LSMessage::LSMessage () {}$/;"	f	class:LSMessage
LSMessage	ls-message.cc	/^LSMessage::LSMessage (LSMessage::MessageType messageType, uint32_t sequenceNumber, uint8_t ttl,$/;"	f	class:LSMessage
LSMessage	ls-message.cc	/^NS_OBJECT_ENSURE_REGISTERED (LSMessage);$/;"	v
LSMessage	ls-message.h	/^class LSMessage : public Header$/;"	c
LSRoutingHelper	ls-routing-helper.cc	/^LSRoutingHelper::LSRoutingHelper () { m_lsFactory.SetTypeId ("LSRoutingProtocol"); }$/;"	f	class:LSRoutingHelper
LSRoutingHelper	ls-routing-helper.cc	/^LSRoutingHelper::LSRoutingHelper (const LSRoutingHelper &o) : m_lsFactory (o.m_lsFactory) {}$/;"	f	class:LSRoutingHelper
LSRoutingHelper	ls-routing-helper.h	/^class LSRoutingHelper : public Ipv4RoutingHelper$/;"	c
LSRoutingProtocol	ls-routing-protocol.cc	/^LSRoutingProtocol::LSRoutingProtocol()$/;"	f	class:LSRoutingProtocol
LSRoutingProtocol	ls-routing-protocol.cc	/^NS_OBJECT_ENSURE_REGISTERED(LSRoutingProtocol);$/;"	v
LSRoutingProtocol	ls-routing-protocol.h	/^class LSRoutingProtocol : public PennRoutingProtocol$/;"	c
LS_MAX_SEQUENCE_NUMBER	ls-routing-protocol.cc	43;"	d	file:
LS_MESSAGE_H	ls-message.h	18;"	d
LS_PORT_NUMBER	ls-routing-protocol.cc	44;"	d	file:
LS_ROUTING_H	ls-routing-protocol.h	18;"	d
LS_ROUTING_HELPER_H	ls-routing-helper.h	20;"	d
MessageType	ls-message.h	/^    enum MessageType$/;"	g	class:LSMessage
Neighbor	ls-routing-protocol.h	/^  struct Neighbor {$/;"	s	class:LSRoutingProtocol
NotifyAddAddress	ls-routing-protocol.cc	/^void LSRoutingProtocol::NotifyAddAddress(uint32_t interface, Ipv4InterfaceAddress address)$/;"	f	class:LSRoutingProtocol
NotifyInterfaceDown	ls-routing-protocol.cc	/^void LSRoutingProtocol::NotifyInterfaceDown(uint32_t i)$/;"	f	class:LSRoutingProtocol
NotifyInterfaceUp	ls-routing-protocol.cc	/^void LSRoutingProtocol::NotifyInterfaceUp(uint32_t i)$/;"	f	class:LSRoutingProtocol
NotifyRemoveAddress	ls-routing-protocol.cc	/^void LSRoutingProtocol::NotifyRemoveAddress(uint32_t interface, Ipv4InterfaceAddress address)$/;"	f	class:LSRoutingProtocol
PING_REQ	ls-message.h	/^	      PING_REQ,$/;"	e	enum:LSMessage::MessageType
PING_RSP	ls-message.h	/^	      PING_RSP,$/;"	e	enum:LSMessage::MessageType
PingReq	ls-message.h	/^    struct PingReq \/\/ LSMessage::PingReq $/;"	s	class:LSMessage
PingRsp	ls-message.h	/^    struct PingRsp \/\/ LSMessage::PingRes$/;"	s	class:LSMessage
Print	ls-message.cc	/^LSMessage::PingReq::Print (std::ostream &os) const$/;"	f	class:LSMessage::PingReq
Print	ls-message.cc	/^LSMessage::PingRsp::Print (std::ostream &os) const$/;"	f	class:LSMessage::PingRsp
Print	ls-message.cc	/^LSMessage::Print (std::ostream &os) const$/;"	f	class:LSMessage
PrintRoutingTable	ls-routing-protocol.cc	/^void LSRoutingProtocol::PrintRoutingTable(Ptr<OutputStreamWrapper> stream, Time::Unit unit) const$/;"	f	class:LSRoutingProtocol
ProcessCommand	ls-routing-protocol.cc	/^void LSRoutingProtocol::ProcessCommand(std::vector<std::string> tokens)$/;"	f	class:LSRoutingProtocol
ProcessHR	ls-routing-protocol.cc	/^void LSRoutingProtocol::ProcessHR(const LSMessage& lsaMsg,Ipv4Address originAddress,Ipv4Address interfaceAddress){$/;"	f	class:LSRoutingProtocol
ProcessLSA	ls-routing-protocol.cc	/^void LSRoutingProtocol::ProcessLSA(const LSMessage & lsaMessage){$/;"	f	class:LSRoutingProtocol
ProcessPingReq	ls-routing-protocol.cc	/^void LSRoutingProtocol::ProcessPingReq(LSMessage lsMessage)$/;"	f	class:LSRoutingProtocol
ProcessPingRsp	ls-routing-protocol.cc	/^void LSRoutingProtocol::ProcessPingRsp(LSMessage lsMessage)$/;"	f	class:LSRoutingProtocol
RecvLSMessage	ls-routing-protocol.cc	/^void LSRoutingProtocol::RecvLSMessage(Ptr<Socket> socket)$/;"	f	class:LSRoutingProtocol
ResolveNodeIpAddress	ls-routing-protocol.cc	/^LSRoutingProtocol::ResolveNodeIpAddress(uint32_t nodeNumber)$/;"	f	class:LSRoutingProtocol
ReverseLookup	ls-routing-protocol.cc	/^LSRoutingProtocol::ReverseLookup(Ipv4Address ipAddress)$/;"	f	class:LSRoutingProtocol
RouteEntry	ls-routing-protocol.h	/^  struct RouteEntry{ \/\/ ###  RouteEntry : store target NODE  -> next pop and COST  $/;"	s	class:LSRoutingProtocol
RouteInput	ls-routing-protocol.cc	/^bool LSRoutingProtocol::RouteInput(Ptr<const Packet> packet, const Ipv4Header &header, Ptr<const NetDevice> inputDev,$/;"	f	class:LSRoutingProtocol
RouteOutput	ls-routing-protocol.cc	/^LSRoutingProtocol::RouteOutput(Ptr<Packet> packet, const Ipv4Header &header, Ptr<NetDevice> outInterface,$/;"	f	class:LSRoutingProtocol
RunDijkstra	ls-routing-protocol.cc	/^void LSRoutingProtocol::RunDijkstra(){$/;"	f	class:LSRoutingProtocol
Serialize	ls-message.cc	/^LSMessage::PingReq::Serialize (Buffer::Iterator &start) const$/;"	f	class:LSMessage::PingReq
Serialize	ls-message.cc	/^LSMessage::PingRsp::Serialize (Buffer::Iterator &start) const$/;"	f	class:LSMessage::PingRsp
Serialize	ls-message.cc	/^LSMessage::Serialize (Buffer::Iterator start) const$/;"	f	class:LSMessage
Serialize	ls-message.cc	/^void LSMessage::LSAInfo::Serialize(Buffer::Iterator& start) const{$/;"	f	class:LSMessage::LSAInfo
Set	ls-routing-helper.cc	/^LSRoutingHelper::Set (std::string name, const AttributeValue &value)$/;"	f	class:LSRoutingHelper
SetAddressNodeMap	ls-routing-protocol.cc	/^void LSRoutingProtocol::SetAddressNodeMap(std::map<Ipv4Address, uint32_t> addressNodeMap)$/;"	f	class:LSRoutingProtocol
SetIpv4	ls-routing-protocol.cc	/^void LSRoutingProtocol::SetIpv4(Ptr<Ipv4> ipv4)$/;"	f	class:LSRoutingProtocol
SetLSA	ls-message.cc	/^void LSMessage::SetLSA(uint32_t originNode, uint32_t sequenceNumber, const std::map<uint32_t, uint32_t>& neighbors) {$/;"	f	class:LSMessage
SetMainInterface	ls-routing-protocol.cc	/^void LSRoutingProtocol::SetMainInterface(uint32_t mainInterface)$/;"	f	class:LSRoutingProtocol
SetMessageType	ls-message.cc	/^LSMessage::SetMessageType (MessageType messageType)$/;"	f	class:LSMessage
SetNodeAddressMap	ls-routing-protocol.cc	/^void LSRoutingProtocol::SetNodeAddressMap(std::map<uint32_t, Ipv4Address> nodeAddressMap)$/;"	f	class:LSRoutingProtocol
SetOriginatorAddress	ls-message.cc	/^LSMessage::SetOriginatorAddress (Ipv4Address originatorAddress)$/;"	f	class:LSMessage
SetPingReq	ls-message.cc	/^LSMessage::SetPingReq (Ipv4Address destinationAddress, std::string pingMessage)$/;"	f	class:LSMessage
SetPingRsp	ls-message.cc	/^LSMessage::SetPingRsp (Ipv4Address destinationAddress, std::string pingMessage)$/;"	f	class:LSMessage
SetSequenceNumber	ls-message.cc	/^LSMessage::SetSequenceNumber (uint32_t sequenceNumber)$/;"	f	class:LSMessage
SetTTL	ls-message.cc	/^LSMessage::SetTTL (uint8_t ttl)$/;"	f	class:LSMessage
address	ls-routing-protocol.h	/^    Ipv4Address address;$/;"	m	struct:LSRoutingProtocol::Neighbor
cost	ls-routing-protocol.h	/^	  uint32_t cost; \/\/ COST : $/;"	m	struct:LSRoutingProtocol::RouteEntry
destinationAddress	ls-message.h	/^      Ipv4Address destinationAddress;$/;"	m	struct:LSMessage::PingReq
destinationAddress	ls-message.h	/^      Ipv4Address destinationAddress;$/;"	m	struct:LSMessage::PingRsp
hr	ls-message.h	/^      HRInfo hr;$/;"	m	struct:LSMessage::__anon1
interfaceAddress	ls-routing-protocol.h	/^    Ipv4Address interfaceAddress;$/;"	m	struct:LSRoutingProtocol::Neighbor
lastHello	ls-routing-protocol.h	/^    Timer lastHello;$/;"	m	struct:LSRoutingProtocol::Neighbor
lsa	ls-message.h	/^      LSAInfo lsa;$/;"	m	struct:LSMessage::__anon1
m_HRTimer	ls-routing-protocol.h	/^  Timer m_HRTimer;  \/\/ Hello requset timer;$/;"	m	class:LSRoutingProtocol
m_addressNodeMap	ls-routing-protocol.h	/^  std::map<Ipv4Address, uint32_t> m_addressNodeMap;$/;"	m	class:LSRoutingProtocol
m_auditPingsTimer	ls-routing-protocol.h	/^  Timer m_auditPingsTimer;$/;"	m	class:LSRoutingProtocol
m_currentSequenceNumber	ls-routing-protocol.h	/^  uint32_t m_currentSequenceNumber;$/;"	m	class:LSRoutingProtocol
m_ipv4	ls-routing-protocol.h	/^  Ptr<Ipv4> m_ipv4;$/;"	m	class:LSRoutingProtocol
m_lsDatabase	ls-routing-protocol.h	/^  std::map<uint32_t,LSMessage::LSAInfo> m_lsDatabase;  \/\/ ### Store lot of LS data  [a MAP]$/;"	m	class:LSRoutingProtocol
m_lsFactory	ls-routing-helper.h	/^  ObjectFactory m_lsFactory;$/;"	m	class:LSRoutingHelper
m_lsPort	ls-routing-protocol.h	/^  uint16_t m_lsPort;$/;"	m	class:LSRoutingProtocol
m_mainAddress	ls-routing-protocol.h	/^  Ipv4Address m_mainAddress;$/;"	m	class:LSRoutingProtocol
m_maxTTL	ls-routing-protocol.h	/^  uint8_t m_maxTTL;$/;"	m	class:LSRoutingProtocol
m_message	ls-message.h	/^     }m_message;$/;"	m	class:LSMessage	typeref:struct:LSMessage::__anon1
m_messageType	ls-message.h	/^    MessageType m_messageType; \/\/ lsmsg.m_messageType $/;"	m	class:LSMessage
m_neighbors	ls-routing-protocol.h	/^  std::map<Ipv4Address, Neighbor> m_neighbors;$/;"	m	class:LSRoutingProtocol
m_nodeAddressMap	ls-routing-protocol.h	/^  std::map<uint32_t, Ipv4Address> m_nodeAddressMap;$/;"	m	class:LSRoutingProtocol
m_originatorAddress	ls-message.h	/^    Ipv4Address m_originatorAddress; \/\/ lsmsg.m_originatorAddress $/;"	m	class:LSMessage
m_pingTimeout	ls-routing-protocol.h	/^  Time m_pingTimeout;$/;"	m	class:LSRoutingProtocol
m_pingTracker	ls-routing-protocol.h	/^  std::map<uint32_t, Ptr<PingRequest>> m_pingTracker;$/;"	m	class:LSRoutingProtocol
m_recvSocket	ls-routing-protocol.h	/^  Ptr<Socket> m_recvSocket; \/\/!< Receiving socket.$/;"	m	class:LSRoutingProtocol
m_routingTable	ls-routing-protocol.h	/^  std::map<uint32_t,RouteEntry> m_routingTable;$/;"	m	class:LSRoutingProtocol
m_sequenceNumber	ls-message.h	/^    uint32_t m_sequenceNumber; \/\/ lsmsg.m_sequenceNumber$/;"	m	class:LSMessage
m_socketAddresses	ls-routing-protocol.h	/^  std::map<Ptr<Socket>, Ipv4InterfaceAddress> m_socketAddresses;$/;"	m	class:LSRoutingProtocol
m_staticRouting	ls-routing-protocol.h	/^  Ptr<Ipv4StaticRouting> m_staticRouting;$/;"	m	class:LSRoutingProtocol
m_ttl	ls-message.h	/^    uint8_t m_ttl; \/\/ lsmsg.m_ttl$/;"	m	class:LSMessage
msg	ls-message.h	/^	    std::string msg;$/;"	m	struct:LSMessage::HRInfo
neighbors	ls-message.h	/^	    std::map<uint32_t,uint32_t> neighbors;$/;"	m	struct:LSMessage::LSAInfo
nextHopAddr	ls-routing-protocol.h	/^	  Ipv4Address nextHopAddr; \/\/ NEXT HOP 'S ADDR$/;"	m	struct:LSRoutingProtocol::RouteEntry
nextHopNode	ls-routing-protocol.h	/^	  uint32_t nextHopNode; \/\/ nextHopNode WHY INT?$/;"	m	struct:LSRoutingProtocol::RouteEntry
node	ls-routing-protocol.h	/^    uint32_t node;$/;"	m	struct:LSRoutingProtocol::Neighbor
operator <<	ls-message.h	/^operator<< (std::ostream& os, const LSMessage& message)$/;"	f
originNode	ls-message.h	/^	    uint32_t originNode; \/\/### int32 NODE$/;"	m	struct:LSMessage::HRInfo
originNode	ls-message.h	/^	    uint32_t originNode; \/\/### int32 NODE$/;"	m	struct:LSMessage::LSAInfo
pingMessage	ls-message.h	/^      std::string pingMessage;$/;"	m	struct:LSMessage::PingReq
pingMessage	ls-message.h	/^      std::string pingMessage;$/;"	m	struct:LSMessage::PingRsp
pingReq	ls-message.h	/^      PingReq pingReq;$/;"	m	struct:LSMessage::__anon1
pingRsp	ls-message.h	/^      PingRsp pingRsp;$/;"	m	struct:LSMessage::__anon1
seq	ls-message.h	/^	    uint32_t seq; \/\/ ### int32 Seq$/;"	m	struct:LSMessage::HRInfo
sequenceNumber	ls-message.h	/^	    uint32_t sequenceNumber; \/\/ ### int32 Seq$/;"	m	struct:LSMessage::LSAInfo
~LSMessage	ls-message.cc	/^LSMessage::~LSMessage () {}$/;"	f	class:LSMessage
~LSRoutingProtocol	ls-routing-protocol.cc	/^LSRoutingProtocol::~LSRoutingProtocol() {}$/;"	f	class:LSRoutingProtocol
